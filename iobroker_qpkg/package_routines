######################################################################
# List of available definitions (it's not necessary to uncomment them)
######################################################################
###### Command definitions #####
#CMD_AWK="/bin/awk"
#CMD_CAT="/bin/cat"
#CMD_CHMOD="/bin/chmod"
#CMD_CHOWN="/bin/chown"
#CMD_CP="/bin/cp"
#CMD_CUT="/bin/cut"
#CMD_DATE="/bin/date"
#CMD_ECHO="/bin/echo"
#CMD_EXPR="/usr/bin/expr"
#CMD_FIND="/usr/bin/find"
#CMD_GETCFG="/sbin/getcfg"
#CMD_GREP="/bin/grep"
#CMD_GZIP="/bin/gzip"
#CMD_HOSTNAME="/bin/hostname"
#CMD_LN="/bin/ln"
#CMD_LOG_TOOL="/sbin/log_tool"
#CMD_MD5SUM="/bin/md5sum"
#CMD_MKDIR="/bin/mkdir"
#CMD_MV="/bin/mv"
#CMD_RM="/bin/rm"
#CMD_RMDIR="/bin/rmdir"
#CMD_SED="/bin/sed"
#CMD_SETCFG="/sbin/setcfg"
#CMD_SLEEP="/bin/sleep"
#CMD_SORT="/usr/bin/sort"
#CMD_SYNC="/bin/sync"
#CMD_TAR="/bin/tar"
#CMD_TOUCH="/bin/touch"
#CMD_WGET="/usr/bin/wget"
#CMD_WLOG="/sbin/write_log"
#CMD_XARGS="/usr/bin/xargs"
#CMD_7Z="/usr/local/sbin/7z"
#
###### System definitions #####
#SYS_EXTRACT_DIR="$(pwd)"
#SYS_CONFIG_DIR="/etc/config"
#SYS_INIT_DIR="/etc/init.d"
#SYS_STARTUP_DIR="/etc/rcS.d"
#SYS_SHUTDOWN_DIR="/etc/rcK.d"
#SYS_RSS_IMG_DIR="/home/httpd/RSS/images"
#SYS_QPKG_DATA_FILE_GZIP="./data.tar.gz"
#SYS_QPKG_DATA_FILE_BZIP2="./data.tar.bz2"
#SYS_QPKG_DATA_FILE_7ZIP="./data.tar.7z"
#SYS_QPKG_DATA_CONFIG_FILE="./conf.tar.gz"
#SYS_QPKG_DATA_MD5SUM_FILE="./md5sum"
#SYS_QPKG_DATA_PACKAGES_FILE="./Packages.gz"
#SYS_QPKG_CONFIG_FILE="$SYS_CONFIG_DIR/qpkg.conf"
#SYS_QPKG_CONF_FIELD_QPKGFILE="QPKG_File"
#SYS_QPKG_CONF_FIELD_NAME="Name"
#SYS_QPKG_CONF_FIELD_VERSION="Version"
#SYS_QPKG_CONF_FIELD_ENABLE="Enable"
#SYS_QPKG_CONF_FIELD_DATE="Date"
#SYS_QPKG_CONF_FIELD_SHELL="Shell"
#SYS_QPKG_CONF_FIELD_INSTALL_PATH="Install_Path"
#SYS_QPKG_CONF_FIELD_CONFIG_PATH="Config_Path"
#SYS_QPKG_CONF_FIELD_WEBUI="WebUI"
#SYS_QPKG_CONF_FIELD_WEBPORT="Web_Port"
#SYS_QPKG_CONF_FIELD_SERVICEPORT="Service_Port"
#SYS_QPKG_CONF_FIELD_SERVICE_PIDFILE="Pid_File"
#SYS_QPKG_CONF_FIELD_AUTHOR="Author"
#SYS_QPKG_CONF_FIELD_RC_NUMBER="RC_Number"
## The following variables are assigned values at run-time.
#SYS_HOSTNAME=$($CMD_HOSTNAME)
## Data file name (one of SYS_QPKG_DATA_FILE_GZIP, SYS_QPKG_DATA_FILE_BZIP2,
## or SYS_QPKG_DATA_FILE_7ZIP)
#SYS_QPKG_DATA_FILE=
## Base location.
#SYS_QPKG_BASE=""
## Base location of QPKG installed packages.
#SYS_QPKG_INSTALL_PATH=""
## Location of installed software.
#SYS_QPKG_DIR=""
## If the QPKG should be enabled or disabled after the installation/upgrade.
#SYS_QPKG_SERVICE_ENABLED=""
## Architecture of the device the QPKG is installed on.
#SYS_CPU_ARCH=""
## Name and location of system shares
#SYS_PUBLIC_SHARE=""
#SYS_PUBLIC_PATH=""
#SYS_DOWNLOAD_SHARE=""
#SYS_DOWNLOAD_PATH=""
#SYS_MULTIMEDIA_SHARE=""
#SYS_MULTIMEDIA_PATH=""
#SYS_RECORDINGS_SHARE=""
#SYS_RECORDINGS_PATH=""
#SYS_USB_SHARE=""
#SYS_USB_PATH=""
#SYS_WEB_SHARE=""
#SYS_WEB_PATH=""
## Path to ipkg or opkg package tool if installed.
#CMD_PKG_TOOL=
#
######################################################################
# All package specific functions shall call 'err_log MSG' if an error
# is detected that shall terminate the installation.
######################################################################
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is removed.
######################################################################
PKG_PRE_REMOVE="{
    # stop iobroker
    	IOBROKER_SCRIPT=\$($CMD_GETCFG iobroker $SYS_QPKG_CONF_FIELD_SHELL -f $SYS_QPKG_CONFIG_FILE)
      if [ ! -z "\$IOBROKER_SCRIPT" -a -x "\$IOBROKER_SCRIPT" ]; then
        # Check if iobroker is enabled
        IOBROKER_ENABLED=\$($CMD_GETCFG iobroker $SYS_QPKG_CONF_FIELD_ENABLE -u -d FALSE -f $SYS_QPKG_CONFIG_FILE)
          if [ "\$IOBROKER_ENABLED" = "TRUE" ]; then
          # Stop iobroker
          \$IOBROKER_SCRIPT stop
        fi
      fi
}"
#
#PKG_MAIN_REMOVE="{
    #uninstall iobroker
    if [ ! -z "${SYS_QPKG_DIR}" ]; then
          $CMD_ECHO "Uninstalling existing iobroker ..."
		      $CMD_RM -rf ${SYS_QPKG_DIR}/iobroker
	  fi
}"
#
#PKG_POST_REMOVE="{
#}"
#
######################################################################
# Define any package specific initialization that shall be performed
# before the package is installed.
######################################################################
#pkg_init(){
#}
#
######################################################################
# Define any package specific requirement checks that shall be
# performed before the package is installed.
######################################################################
#pkg_check_requirement(){
#}
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is installed.
######################################################################
#pkg_pre_install(){
    #we must redirect the .npm and .node-gyp to another place, due to memory limitations
    #user root in /share/homes
    SROOT_DIR=$(/share/homes/root)
    if [ ! -z "${SROOT_DIR}" ]; then
          $CMD_ECHO "Creating /root in /share/homes ..."
	  $CMD_MKDIR ${SROOT_DIR}
    	  $CMD_MKDIR ${SROOT_DIR}/.node-gyp
          $CMD_MKDIR ${SROOT_DIR}/.npm
          $CMD_CHMOD -R 777 ${SROOT_DIR}
	  else
	  # directory or link already there, check what it is and make new
     fi

    
    #link in /root to /share/homes/root
    ROOT_DIR=$(/root)
    if [ ! -z "${SROOT_DIR}/.node-gyp" ]; then
        $CMD_ECHO "Creating symlink for .node-gyp to /share/homes/root ..."
    	$CMD_LN -s ${SROOT_DIR}/.node-gyp ${ROOT_DIR}/.
	else
	# directory or link already there, check what it is and make new
    fi
    
    if [ ! -z "${SROOT_DIR}/.npm" ]; then
    	$CMD_ECHO "Creating symlink for .npm to /share/homes/root ..."
    	$CMD_LN -s ${SROOT_DIR}/.npm ${ROOT_DIR}/.
	else
	# directory or link already there, check what it is and make new
    fi
}
#
#pkg_install(){
    #install iobroker
    $CMD_ECHO "Installing iobroker ..."
    npm install iobroker
    
    #install iobroker.admin
    $CMD_ECHO "Installing iobroker admin page ..."
    npm install iobroker.admin
    
    #change port from 8081 to 8085 for admin page
    $CMD_SED -i 's/8082/8085/g' ${SYS_QPKG_DIR}/node_modules/iobroker.admin/admin/index.html
    $CMD_ECHO "iobroker admin port changed to 8085"

}
#
pkg_post_install(){
	# Enable the QPKG apckage
	# SYS_QPKG_SERVICE_ENABLED=TRUE
}
#
